{"version":3,"file":"your-function.cjs","sources":["../src/diff.js","../src/your-function.js"],"sourcesContent":["import { diffLines, structuredPatch } from \"diff\";\nimport { blue, bold, red, green, gray } from \"colorette\";\n\n\n/**\n * Adds an angle bracket to each line of a\n * text section.\n * @param {string} angle - '>' or '<'\n * @param {string} txt - The text section.\n * @returns {string} - The given text section with an angle bracket and a space in front of each line. \n */\nconst addAngles = (angle, txt) => {\n    const txtArr = txt.split(\"\\n\");\n    let lastChar = \"\";\n    if (txt.at(-1) === \"\\n\") {\n        lastChar = \"\\n\";\n        txtArr.pop();\n    }\n    let output = txtArr.map(line => `${angle} ${line}`).join(\"\\n\");\n    output += lastChar;\n    return output;\n};\n\n\n/**\n * Prints an output in the mould of GNU diff when\n * called with no parameters other than the files.\n * But more picturesque, thanks to red and green\n * colors...\n * Also possible is a \"file\" mode. This variant\n * shows the whole file with added and removed\n * lines.\n * @param {string} source - The original code.\n * @param {string} code - The modified code.\n * @param {string} [diffOption] - As passed by the user. If the value is 'file' also unchanged code is printed.  \n */\nconst showDiff = (filename, source, code, diffOption) => {\n    const fileMode = diffOption == \"file\";\n    console.log(code);\n\n    console.log(bold(blue(\n        `(plugin manipulate) diff for file '${filename}':`\n    )));\n    \n    console.log(gray(\"BEGIN >>>\"));\n\n    if (fileMode) {\n        const diff = diffLines(source, code);\n\n        let message = \"\";\n        \n        diff.forEach((part) => {\n            let msg;\n            if (part.added) {\n                msg = green(addAngles(\">\", part.value));\n            } else if (part.removed) {\n                msg = red(addAngles(\"<\", part.value));\n            } else {\n                msg = part.value;\n            }\n            message += msg;\n        });\n        \n        console.log(message);\n    \n    }\n        \n    else {\n        const diff = structuredPatch(\"\", \"\", source, code, \"\", \"\", {\n            context: 0\n        });\n        \n        for (const part of diff.hunks) {\n\n            // add\n            if (part.oldLines === 0) {\n                let info = `${part.oldStart}a${part.newStart}`;\n                if (part.newLines > 1) {\n                    info += `,${part.newStart+part.newLines-1}`;\n                }\n                console.log(bold(info));\n                part.lines.forEach(line => console.log(green(`> ${line.slice(1)}`)));\n            }\n            \n            // delete\n            else if (part.newLines === 0) {\n                let info = String(part.oldStart);\n                if (part.oldLines > 1) {\n                    info += `,${part.oldStart+part.oldLines-1}`;\n                }\n                info += `d${part.newLines}`;\n                console.log(bold(info));\n                part.lines.forEach(line => console.log(red(`< ${line.slice(1)}`)));\n            }\n            \n            // change\n            else {\n                let info = String(part.oldStart);\n                if (part.oldLines > 1) {\n                    info += `,${part.oldStart+part.oldLines-1}`;\n                }\n                info += `c${part.newStart}`;\n                if (part.newLines > 1) {\n                    info += `,${part.newStart+part.newLines-1}`;\n                }\n                console.log(bold(info));\n                \n                let plus = false;\n                part.lines.forEach((line, i) => {\n                    if (plus) {\n                        console.log(green(`> ${line.slice(1)}`));\n                    } else {\n                        console.log(red(`< ${line.slice(1)}`));\n                        if (part.lines[i+1].at(0) === \"+\") {\n                            console.log(\"---\");\n                            plus = true;\n                        }\n                    }\n                });\n            }\n        }\n    }\n     \n    console.log(gray(\"<<< END\\n\"));\n};\n\nexport default showDiff;\n","/**\n * [rollup-plugin-your-function]{@link https://github.com/UmamiAppearance/rollup-plugin-yor-function}\n *\n * @version 0.1.1\n * @author UmamiAppearance [mail@umamiappearance.eu]\n * @license MIT\n */\n\nimport { createFilter } from \"@rollup/pluginutils\";\nimport MagicString from \"magic-string\";\nimport showDiff from \"./diff.js\";\n\nconst yourFunction = (options={}) => {\n\n    if (!options.fn) {\n        throw Error(\"A function must be specified\");\n    }\n\n    const filter = createFilter(options.include, options.exclude);\n\n    return {\n        name: \"manipulate\",\n\n        transform(source, id) {\n            if (filter(id)) {\n                \n                const code = options.fn(source);\n\n                if (\"showDiff\" in options && code !== source) {\n                    showDiff(id, source, code, options.showDiff);\n                }\n                \n                let map;\n\n                if (options.sourceMap !== false && options.sourcemap !== false) {\n                    const ms = new MagicString(code);\n                    map = ms.generateMap({ hires: true });\n                }\n\n                return { code, map };\n            }\n        }\n    };\n};\n\nexport { yourFunction };\n"],"names":["bold","blue","gray","diff","diffLines","green","red","structuredPatch","createFilter","MagicString"],"mappings":";;;;;;;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,SAAS,GAAG,CAAC,KAAK,EAAE,GAAG,KAAK;AAClC,IAAI,MAAM,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACnC,IAAI,IAAI,QAAQ,GAAG,EAAE,CAAC;AACtB,IAAI,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;AAC7B,QAAQ,QAAQ,GAAG,IAAI,CAAC;AACxB,QAAQ,MAAM,CAAC,GAAG,EAAE,CAAC;AACrB,KAAK;AACL,IAAI,IAAI,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACnE,IAAI,MAAM,IAAI,QAAQ,CAAC;AACvB,IAAI,OAAO,MAAM,CAAC;AAClB,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,QAAQ,GAAG,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,KAAK;AACzD,IAAI,MAAM,QAAQ,GAAG,UAAU,IAAI,MAAM,CAAC;AAC1C,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACtB;AACA,IAAI,OAAO,CAAC,GAAG,CAACA,cAAI,CAACC,cAAI;AACzB,QAAQ,CAAC,mCAAmC,EAAE,QAAQ,CAAC,EAAE,CAAC;AAC1D,KAAK,CAAC,CAAC,CAAC;AACR;AACA,IAAI,OAAO,CAAC,GAAG,CAACC,cAAI,CAAC,WAAW,CAAC,CAAC,CAAC;AACnC;AACA,IAAI,IAAI,QAAQ,EAAE;AAClB,QAAQ,MAAMC,MAAI,GAAGC,cAAS,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AAC7C;AACA,QAAQ,IAAI,OAAO,GAAG,EAAE,CAAC;AACzB;AACA,QAAQD,MAAI,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK;AAC/B,YAAY,IAAI,GAAG,CAAC;AACpB,YAAY,IAAI,IAAI,CAAC,KAAK,EAAE;AAC5B,gBAAgB,GAAG,GAAGE,eAAK,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AACxD,aAAa,MAAM,IAAI,IAAI,CAAC,OAAO,EAAE;AACrC,gBAAgB,GAAG,GAAGC,aAAG,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AACtD,aAAa,MAAM;AACnB,gBAAgB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;AACjC,aAAa;AACb,YAAY,OAAO,IAAI,GAAG,CAAC;AAC3B,SAAS,CAAC,CAAC;AACX;AACA,QAAQ,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AAC7B;AACA,KAAK;AACL;AACA,SAAS;AACT,QAAQ,MAAMH,MAAI,GAAGI,oBAAe,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE;AACnE,YAAY,OAAO,EAAE,CAAC;AACtB,SAAS,CAAC,CAAC;AACX;AACA,QAAQ,KAAK,MAAM,IAAI,IAAIJ,MAAI,CAAC,KAAK,EAAE;AACvC;AACA;AACA,YAAY,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;AACrC,gBAAgB,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC/D,gBAAgB,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE;AACvC,oBAAoB,IAAI,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AAChE,iBAAiB;AACjB,gBAAgB,OAAO,CAAC,GAAG,CAACH,cAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACxC,gBAAgB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,GAAG,CAACK,eAAK,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrF,aAAa;AACb;AACA;AACA,iBAAiB,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;AAC1C,gBAAgB,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACjD,gBAAgB,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE;AACvC,oBAAoB,IAAI,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AAChE,iBAAiB;AACjB,gBAAgB,IAAI,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC5C,gBAAgB,OAAO,CAAC,GAAG,CAACL,cAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACxC,gBAAgB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,GAAG,CAACM,aAAG,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnF,aAAa;AACb;AACA;AACA,iBAAiB;AACjB,gBAAgB,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACjD,gBAAgB,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE;AACvC,oBAAoB,IAAI,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AAChE,iBAAiB;AACjB,gBAAgB,IAAI,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC5C,gBAAgB,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE;AACvC,oBAAoB,IAAI,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AAChE,iBAAiB;AACjB,gBAAgB,OAAO,CAAC,GAAG,CAACN,cAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACxC;AACA,gBAAgB,IAAI,IAAI,GAAG,KAAK,CAAC;AACjC,gBAAgB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK;AAChD,oBAAoB,IAAI,IAAI,EAAE;AAC9B,wBAAwB,OAAO,CAAC,GAAG,CAACK,eAAK,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,qBAAqB,MAAM;AAC3B,wBAAwB,OAAO,CAAC,GAAG,CAACC,aAAG,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/D,wBAAwB,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AAC3D,4BAA4B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAC/C,4BAA4B,IAAI,GAAG,IAAI,CAAC;AACxC,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB,CAAC,CAAC;AACnB,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA,IAAI,OAAO,CAAC,GAAG,CAACJ,cAAI,CAAC,WAAW,CAAC,CAAC,CAAC;AACnC,CAAC;;AC5HD;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACK,MAAC,YAAY,GAAG,CAAC,OAAO,CAAC,EAAE,KAAK;AACrC;AACA,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE;AACrB,QAAQ,MAAM,KAAK,CAAC,8BAA8B,CAAC,CAAC;AACpD,KAAK;AACL;AACA,IAAI,MAAM,MAAM,GAAGM,wBAAY,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;AAClE;AACA,IAAI,OAAO;AACX,QAAQ,IAAI,EAAE,YAAY;AAC1B;AACA,QAAQ,SAAS,CAAC,MAAM,EAAE,EAAE,EAAE;AAC9B,YAAY,IAAI,MAAM,CAAC,EAAE,CAAC,EAAE;AAC5B;AACA,gBAAgB,MAAM,IAAI,GAAG,OAAO,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AAChD;AACA,gBAAgB,IAAI,UAAU,IAAI,OAAO,IAAI,IAAI,KAAK,MAAM,EAAE;AAC9D,oBAAoB,QAAQ,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;AACjE,iBAAiB;AACjB;AACA,gBAAgB,IAAI,GAAG,CAAC;AACxB;AACA,gBAAgB,IAAI,OAAO,CAAC,SAAS,KAAK,KAAK,IAAI,OAAO,CAAC,SAAS,KAAK,KAAK,EAAE;AAChF,oBAAoB,MAAM,EAAE,GAAG,IAAIC,+BAAW,CAAC,IAAI,CAAC,CAAC;AACrD,oBAAoB,GAAG,GAAG,EAAE,CAAC,WAAW,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC1D,iBAAiB;AACjB;AACA,gBAAgB,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC;AACrC,aAAa;AACb,SAAS;AACT,KAAK,CAAC;AACN;;;;"}